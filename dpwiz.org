
* TODO Генерилка PDF
** DONE Вертикальное выравнивание?
   CLOCK: [2014-07-10 Чт 10:02]--[2014-07-10 Чт 11:09] =>  1:07
*** Типа можно
    через containerContentHeight можно получить высоту
    сверстанного текста, затем поправить положение
    контейнера и повторно ранисовать
** DONE Центрирование текста по вертикали внутри блока
   CLOCK: [2014-07-10 Чт 11:13]--[2014-07-10 Чт 11:55] =>  0:42
** DONE Отобразить данные по шаблону
   CLOCK: [2014-07-11 Пт 11:39]--[2014-07-11 Пт 13:28] =>  1:49
   CLOCK: [2014-07-10 Чт 11:56]--[2014-07-10 Чт 13:34] =>  1:38

* TODO Oauth provider
  CLOCK: [2014-07-24 Чт 11:57]--[2014-07-24 Чт 12:38] =>  0:41
  CLOCK: [2014-07-24 Чт 10:57]--[2014-07-24 Чт 11:10] =>  0:13
** Участники
*** Владелец ресурса
    Другими словами конечный пользователь
*** Сервер ресурса
*** Сервер авторизации
**** Что делает
***** Выдает код авторизации клиентскому приложению
***** Аутентифицирует владельца ресурса
***** Запрашивает у владельца авторизацию на ресурс
*** Клиентское приложение
** Данные
*** Код авторизации
    Выдается сервером авторизации владельцу ресурсов,
    тот передает клиенту
*** Токен доступа
    Выдается сервером авторизации напрямую клиенту,
    для получения требуется код авторизации
    Используется для получения доступа к ресурсу
    клиентом, передается серверу ресурса
*** Токен обновления
    Выдается сервером авторизации клиенту, для
    получения требуется код авторизации, либо токен
    обновления.
    Используется для обновления токена доступа с
    истекшим сроком действия у сервера авторизации
** Сценарии
*** Получение кода авторизации
**** DONE Браузер перенаправляется на auth endpoint
     - response_type = code
     - client_id = blabla
     - redirect_uri = http://blabla
     - scope = yoba,boba
     - state = somestate
**** Сервер проверяет запрос
     - response_type = code
     - client_id представлен
     - redirect_uri
       - абсолютный
       - принадлежит client_id
     - scope имеет допустимые значения
***** Если redirect_uri, client_id не верны
****** Показывает страницу об ошибке
***** Если есть другие ошибки в запросе
****** Редиректит на redirect_uri с описанием ошибки
**** Сервер авторизует клиента
***** Если client_id не верный
****** Редиректит на redirect_uri с описанием ошибки
**** Сервер авторизует владельца ресурса
**** Владелец ресурса авторизует клиента
***** Если владелец ресурса не дал авторизацию
****** Редирект на redirect_uri с кодом access_denied
**** Сервер генерирует код авторизации и сохраняет в базе
**** Сервер редиректит юзер-агента на redirect_uri
     Параметры кодируются в QUERY части запроса.
     Оригинальные параметры из redirect_uri должны быть
     сохранены.
     - code = jasdf234
     - state = somestate
**** Клиент получает код из запроса
*** Получение access token по коду
**** Клиент делает запрос серверу авторизации
     - grant_type = authorization_code
     - code = authcode
     - redirect_uri = http://blabla
     - client_id = blabla
     - client_secret = secret
**** Сервер аутентифицирует клиента
***** Как?
****** Через HTTP Basic (рекомендовано)
****** Через параметр client_secret (не рекомендовано)
***** Если не аутентифицировал
****** json ответ с ошибкой
**** Сервер проверяет запрос
     - redirect_uri
       - принадлежит клиенту
       - абсолютный
     - grant_type = authorization_code
     - code принадлежит клиенту
***** Если что то не так
****** json ответ с ошибкой
**** Сервер генерирует токен
     Должно быть помечено, что токен получен полным
     способом
**** Сервер выдает json ответ
     - access_token
     - token_type = bearer
     - expires_in = количество секунд до протухания
     - refresh_token
     - scope = актуальный скоуп, разрешенный клиентом
*** Получение implicit access token
**** user-agent направляется на auth endpoint
     - response_type = token
     - client_id = blabla
     - redirect_uri = http://blabla
     - scope = eatmeat,drinkvodka
     - state = somestate
**** DONE Сервер проверяет запрос
     - response_type = token
     - redirect_uri
       - соответствует клиенту
       - абсолютный
     - scope имеет допустимое значение
***** Если redirect_uri, client_id не верны
****** Страница с ошибкой
***** Другие ошибки
****** редирект с подробностями в fragment
**** DONE Сервер авторизует владельца ресурсов
**** TODO Владелец ресурса авторизует клиента
***** Если владелец ресурса не авторизовал
****** редирект с подробностями в fragment
**** Сервер генерирует access_token
     В базе должно быть помечено, что это implicit
     grant token
**** Сервер редиректит с параметрами в fragment
     - access_token
     - token_type = bearer
     - expires_in = количество секунд до протухания
     - scope = актуальный скоуп, разрешенный клиентом
     - state = somestate
** todo
*** DONE Приложение с postgresql-simple
    CLOCK: [2014-08-07 Чт 21:09]--[2014-08-07 Чт 21:09] =>  0:00
    CLOCK: [2014-08-07 Чт 15:55]--[2014-08-07 Чт 17:10] =>  1:15
**** DONE Установить соединение с базой
     CLOCK: [2014-08-07 Чт 21:09]--[2014-08-07 Чт 23:18] =>  2:09
**** DONE Продумать схему
     CLOCK: [2014-08-08 Пт 17:49]--[2014-08-08 Пт 18:15] =>  0:26
     CLOCK: [2014-08-08 Пт 14:51]--[2014-08-08 Пт 16:20] =>  1:29
     CLOCK: [2014-08-08 Пт 13:54]--[2014-08-08 Пт 14:34] =>  0:40
     CLOCK: [2014-08-08 Пт 11:43]--[2014-08-08 Пт 13:26] =>  1:43
**** TODO Создание схемы
*** DONE проверить доступность холокоста снаружи
*** DONE Создать обертки для выполнения запросов
    CLOCK: [2014-08-07 Чт 23:22]--[2014-08-08 Пт 00:09] =>  0:47
*** DONE Регистрация и аутентификация пользователей
    CLOCK: [2014-08-11 Пн 21:36]--[2014-08-11 Пн 22:41] =>  1:05
    CLOCK: [2014-08-11 Пн 19:27]--[2014-08-11 Пн 21:21] =>  1:54
    CLOCK: [2014-08-11 Пн 16:46]--[2014-08-11 Пн 17:51] =>  1:05
    CLOCK: [2014-08-11 Пн 15:28]--[2014-08-11 Пн 16:23] =>  0:55
    CLOCK: [2014-08-08 Пт 21:00]--[2014-08-08 Пт 21:28] =>  0:28
    CLOCK: [2014-08-08 Пт 18:18]--[2014-08-08 Пт 19:54] =>  1:36
*** DONE сделать id uuid
    CLOCK: [2014-08-12 Вт 11:00]--[2014-08-12 Вт 11:37] =>  0:37
    CLOCK: [2014-08-12 Вт 10:34]--[2014-08-12 Вт 10:54] =>  0:20
*** DONE oauth провайдер
    CLOCK: [2014-08-20 Ср 17:30]--[2014-08-20 Ср 18:35] =>  1:05
    CLOCK: [2014-08-20 Ср 15:54]--[2014-08-20 Ср 16:34] =>  0:40
    CLOCK: [2014-08-20 Ср 14:18]--[2014-08-20 Ср 15:18] =>  1:00
    CLOCK: [2014-08-19 Вт 16:10]--[2014-08-19 Вт 16:36] =>  0:26
    CLOCK: [2014-08-19 Вт 15:24]--[2014-08-19 Вт 15:50] =>  0:26
    CLOCK: [2014-08-19 Вт 14:21]--[2014-08-19 Вт 15:00] =>  0:39
    CLOCK: [2014-08-19 Вт 11:49]--[2014-08-19 Вт 12:59] =>  1:10
    CLOCK: [2014-08-18 Пн 23:45]--[2014-08-18 Пн 23:58] =>  0:13
    CLOCK: [2014-08-18 Пн 21:49]--[2014-08-18 Пн 22:12] =>  0:23
    CLOCK: [2014-08-18 Пн 20:44]--[2014-08-18 Пн 21:29] =>  0:45
    CLOCK: [2014-08-18 Пн 20:10]--[2014-08-18 Пн 20:31] =>  0:21
    CLOCK: [2014-08-18 Пн 17:52]--[2014-08-18 Пн 18:06] =>  0:14
    CLOCK: [2014-08-16 Сб 15:33]--[2014-08-16 Сб 16:15] =>  0:42
    CLOCK: [2014-08-16 Сб 14:31]--[2014-08-16 Сб 15:10] =>  0:39
    CLOCK: [2014-08-15 Пт 23:00]--[2014-08-15 Пт 23:54] =>  0:54
    CLOCK: [2014-08-15 Пт 21:17]--[2014-08-15 Пт 22:41] =>  1:24
    CLOCK: [2014-08-15 Пт 19:31]--[2014-08-15 Пт 20:31] =>  1:00
    CLOCK: [2014-08-15 Пт 17:33]--[2014-08-15 Пт 18:50] =>  1:17
    CLOCK: [2014-08-15 Пт 16:59]--[2014-08-15 Пт 17:03] =>  0:04
    CLOCK: [2014-08-15 Пт 15:09]--[2014-08-15 Пт 16:25] =>  1:16
    CLOCK: [2014-08-15 Пт 11:17]--[2014-08-15 Пт 13:31] =>  2:14
    CLOCK: [2014-08-13 Ср 18:23]--[2014-08-13 Ср 18:50] =>  0:27
    CLOCK: [2014-08-13 Ср 16:37]--[2014-08-13 Ср 17:22] =>  0:45
    CLOCK: [2014-08-12 Вт 14:25]--[2014-08-12 Вт 17:08] =>  2:43
    CLOCK: [2014-08-12 Вт 11:37]--[2014-08-12 Вт 14:02] =>  2:25
    CLOCK: [2014-08-12 Вт 10:54]--[2014-08-12 Вт 11:00] =>  0:06
**** Передача кода авторизации
***** Что надо для выдачи
****** user_id
       Пользователь, который логинится
****** client_id
       Приложение, которое запрашивает доступ
****** redirect_url
       Куда редиректить юзера после генерации кода
       ваторизации
****** scope
***** Как делать
****** DONE Показываем форму подтверждения scope
       CLOCK: [2014-08-13 Ср 19:33]--[2014-08-13 Ср 23:26] =>  3:53
       CLOCK: [2014-08-13 Ср 18:50]--[2014-08-13 Ср 19:15] =>  0:25
******* Берем uid пользователя, либо логиним
******* Берем параметры из запроса
******** client_id
******** scope
******** redirect_url
******* Берем сохраненный scope и redirect_url из базы
******* Валидируем запрошенные параметры с доступными
******* Формируем форму
        Доступные scope в форме в качестве параметров
****** DONE По сабмиту редиректим с кодом авторизации
******* Берем uid
******* Берем параметры запроса
******** client_id из урла
******** scope из параметров формы
         Доступные scope берем из формы
******** redirect_url как параметр формы
******* Валидируем переданные scope redirect_url с доступным приложению
******* Создаем код авторизации, редиректим юзера на него
**** Передача токена доступа
***** Что нужно
****** client_id + client_secret
****** authorization_code
       По коду авторизации узнаем пользователя,
       приложение, скоуп.
***** Как делать
****** Берем авторизацию приложения
******* либо из параметров запроса
******* либо из basic http authentication
****** берем код авторизации
****** валидируем код авторизации
******* приложение соответствует коду авторизации
******* код авторизации не просрочен
****** создаем токен доступа
****** возвращаем токен
*** DONE рефакторнуть
    CLOCK: [2014-08-20 Ср 23:23]--[2014-08-20 Ср 23:37] =>  0:14
    CLOCK: [2014-08-20 Ср 21:52]--[2014-08-20 Ср 23:08] =>  1:16
    CLOCK: [2014-08-20 Ср 20:37]--[2014-08-20 Ср 21:26] =>  0:49
    :PROPERTIES:
    :Effort:   2:00
    :END:
*** DONE регистрация и логин через sms
**** TODO Регистрация через смс
     CLOCK: [2014-08-22 Пт 22:18]--[2014-08-25 Пн 16:01] => 65:43
     CLOCK: [2014-08-22 Пт 18:04]--[2014-08-22 Пт 20:20] =>  2:16
     CLOCK: [2014-08-22 Пт 13:36]--[2014-08-22 Пт 14:28] =>  0:52
     CLOCK: [2014-08-21 Чт 15:24]--[2014-08-21 Чт 16:20] =>  0:56
     CLOCK: [2014-08-21 Чт 14:43]--[2014-08-21 Чт 15:12] =>  0:29
     CLOCK: [2014-08-21 Чт 13:43]--[2014-08-21 Чт 14:16] =>  0:33
     CLOCK: [2014-08-21 Чт 13:14]--[2014-08-21 Чт 13:33] =>  0:19
***** TODO Начальная страничка с вводом телефона
      :PROPERTIES:
      :Effort:   1:00
      :END:
***** TODO Страничка с получением кода
      :PROPERTIES:
      :Effort:   2:00
      :END:
***** TODO Страничка с подтверждением регистрации
      :PROPERTIES:
      :Effort:   0:15
      :END:
**** TODO Логин через смс
***** TODO Страничка с логин паролем
      :PROPERTIES:
      :Effort:   0:30
      :END:
***** TODO Страничка с получением кода
      :PROPERTIES:
      :Effort:   1:00
      :END:
***** TODO Страничка с подтверждением логина
      :PROPERTIES:
      :Effort:   0:15
      :END:
*** DONE интерфейс для регистрации клиентских приложений
*** DONE интерфейс для аутентификации владельца ресурсов и авторизации
*** DONE fix token value
    CLOCK: [2014-09-01 Пн 15:41]--[2014-09-01 Пн 16:08] =>  0:27
    Поправить генерацию токена, убрать вопросительные
    знаки
*** DONE базовые настройки
    CLOCK: [2014-09-01 Пн 21:01]--[2014-09-01 Пн 21:42] =>  0:41
    CLOCK: [2014-09-01 Пн 18:03]--[2014-09-01 Пн 19:58] =>  1:55
    CLOCK: [2014-09-01 Пн 16:49]--[2014-09-01 Пн 17:37] =>  0:48
    Язык
    Часовой пояс
**** DONE Валидация таймзоны
     CLOCK: [2014-09-02 Вт 14:31]--[2014-09-02 Вт 15:24] =>  0:53
     CLOCK: [2014-09-02 Вт 11:58]--[2014-09-02 Вт 13:29] =>  1:31
     CLOCK: [2014-09-02 Вт 10:53]--[2014-09-02 Вт 11:28] =>  0:35
     CLOCK: [2014-09-01 Пн 21:42]--[2014-09-01 Пн 22:59] =>  1:17
     Взять список таймзон из директории /usr/share/zoneinfo
**** DONE Сохранение настроек при обновлении формы
     CLOCK: [2014-09-02 Вт 19:18]--[2014-09-02 Вт 20:09] =>  0:51
     CLOCK: [2014-09-02 Вт 16:24]--[2014-09-02 Вт 17:11] =>  0:47
**** DONE Список стран из настройки
     CLOCK: [2014-09-02 Вт 20:58]--[2014-09-02 Вт 22:03] =>  1:05
*** DONE Повторная отправка смс
    - Note taken on [2014-09-04 Чт 00:03]
    CLOCK: [2014-09-03 Ср 11:25]--[2014-09-03 Ср 11:50] =>  0:25
    CLOCK: [2014-09-03 Ср 10:21]--[2014-09-03 Ср 11:12] =>  0:51
    Там где он используется, рядом со кнопкой
    "продолжить" надо сделать кнопку "выслать
    повторно". При нажатии сервер проверяет прошли ли
    три минуты с момента отправки, убивает старый код и
    высылает новый.

    Бывает, что СМСки залипают и надо кинуть ещё одну,
    чтобы их пробило.

    Возможно, стоит не убивать старый код, а дать его
    тоже ввести чтобы юзеры не путались что им вводить.
**** DONE Таблица в базе с телефонами и кодами
     CLOCK: [2014-09-03 Ср 12:02]--[2014-09-03 Ср 13:07] =>  1:05
     CLOCK: [2014-09-03 Ср 11:50]--[2014-09-03 Ср 11:57] =>  0:07
     Сохранять в таблице ip и user-agent
**** DONE В настройках ограничения
     CLOCK: [2014-09-03 Ср 13:45]--[2014-09-03 Ср 14:12] =>  0:27
     - количество смс за количество секунд
     - время для генерации нового кода
     - время полного протухания кода
**** DONE Унифицировать отправку кода
     CLOCK: [2014-09-03 Ср 22:17]--[2014-09-03 Ср 22:26] =>  0:09
     CLOCK: [2014-09-03 Ср 14:12]--[2014-09-03 Ср 17:04] =>  2:52
     - Функция отправки кода сама производит все
       необходимые проверки
     - Возвращает отправленный код, либо показывает
       страницу с ошибкой
**** DONE Унифицировать валидацию кода
     CLOCK: [2014-09-03 Ср 22:26]--[2014-09-04 Чт 00:03] =>  1:37
     - Функция проверят код по телефону
**** DONE Роут для переотправки смс
     CLOCK: [2014-09-04 Чт 19:56]--[2014-09-04 Чт 20:38] =>  0:42
     CLOCK: [2014-09-04 Чт 18:13]--[2014-09-04 Чт 18:21] =>  0:08
     CLOCK: [2014-09-04 Чт 17:23]--[2014-09-04 Чт 17:42] =>  0:19
     Телефон из роута, ибо сессия - все равно не защита
**** DONE Кнопка повторной отправки на страницах для отправки
     CLOCK: [2014-09-05 Пт 14:44]--[2014-09-05 Пт 15:01] =>  0:17
     CLOCK: [2014-09-04 Чт 22:21]--[2014-09-04 Чт 23:21] =>  1:00
**** DONE Возвращать ошибку но роуте отправки смс
     CLOCK: [2014-09-05 Пт 15:28]--[2014-09-05 Пт 16:31] =>  1:03
     CLOCK: [2014-09-05 Пт 15:01]--[2014-09-05 Пт 15:07] =>  0:06
**** DONE Обрабатывать ошибку в джаваскриптах
     CLOCK: [2014-09-05 Пт 17:33]--[2014-09-05 Пт 17:54] =>  0:21
**** Что требуется
***** Защита от использования роута для массовой рассылки
****** Идентификация клиента, который вбил телефон
******* Ботнеты шарят куки
******** Идентификация клиента по кукам не годится
***** Ограничение по количеству смс за еденицу времени
****** Сохранять в таблице таймстамп последней отправки смс
****** Перед отправкой проверять, сколько смс отправлено за последнее время
****** Количество смс в настройках
***** Генерация нового кода через время
****** Перед отправкой выбирать коды за время протухания
****** Если кодов нет - генерировать новый
****** Протухание кода в настройках
***** Протухание кода
****** При проверке кода выбирать только не протухшие коды
****** Брать из настроек
*** TODO Рефакторнуть формы
    Вынести формы в отдельные модули, чтобы не было
    такого ада в одном модуле, посокращать имена
    функций/типов для форм.
*** TODO Добавить логирование sql запросов
**** TODO Настройка для логирования
**** TODO Логирование, в зависимости от настройки
*** TODO Тесты
**** TODO Юнит тесты инстансов
**** TODO Тесты страниц
*** TODO Переделать разбор параметров для TokenRequest
    Заюзать FieldChecker
*** DONE реализовать implicit grant type
**** DONE Привести работающее в соответствии со сценариями
     CLOCK: [2014-09-11 Чт 19:30]--[2014-09-11 Чт 20:32] =>  1:02
**** DONE поправить выдачу токена
     CLOCK: [2014-09-19 Пт 12:36]--[2014-09-19 Пт 14:44] =>  2:08
     Изменились таблицы
***** DONE токен в ADT
      CLOCK: [2014-09-19 Пт 10:43]--[2014-09-19 Пт 12:36] =>  1:53
**** DONE поправить выдачу кода
     CLOCK: [2014-09-19 Пт 19:25]--[2014-09-19 Пт 20:30] =>  1:05
     Изменились таблицы
**** DONE выдача implicit
     CLOCK: [2014-09-19 Пт 20:30]--[2014-09-20 Сб 00:01] =>  3:31
*** TODO Управление приложениями
**** DONE Список приложений
**** TODO Удаление приложений
**** DONE Страница приложения
     CLOCK: [2014-09-21 Вс 18:31]--[2014-09-21 Вс 18:44] =>  0:13
**** DONE Страница нового приложения
     CLOCK: [2014-09-21 Вс 18:44]--[2014-09-21 Вс 21:23] =>  2:39
**** DONE Проверка типа приложения при выдаче кода
     CLOCK: [2014-09-21 Вс 21:30]--[2014-09-21 Вс 21:38] =>  0:08
**** TODO Список redirect_uri на странице с приложением
*** TODO Инвалидировать старый код.
    После принятия кода помечать в базе, что он
    использован
