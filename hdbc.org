

* hdbc-postgresql
** Модули
*** HDBC.PostgreSQL.ConnectionImpl
**** Типы
***** Connection
      Инстанцирует IConnection.
*** HDBC.PostgreSQL.Connection
**** 
* HDBC
** Устаревшее
*** Используется ручные инстансы Typeable вместо дерайвинга
    Везде имена типов вбиты вручную
** Недостатки
*** Неопределенность с освобождением Statement
    Каждый Statement может быть освобожден в любое время, ибо
    предлагается получать список результатов запроса с
    помощью fetchAllRows, который выполняет ленивое
    IO. Statement удалится только после того, как список
    будет прочитан полностью. А если прочитан не будет, то
    только после сборки мусора, которая может подоспеть,
    когда таких Statement наберется огромное количество, что
    вызовет исключение на стороне клиентской библиотеки
    (превышиние предельного количества открытых Statement).
*** Слабое тестирование
**** SqlValue плохо протестирована на преобразования данных
** Модули
*** HDBC.ColTypes
**** Типы данных
***** SqlColDesc
****** Описание типы столбца таблицы
****** Используется в
       - IConnection как результат describeTable
***** SqlTypeId
****** Перечисление типов столбцов
****** Используется в SqlColDesc
***** SqlInternal
****** Перечисление диапазонов времени
*** HDBC.SqlValue
**** Типы данных
***** SqlValue
****** Используется для 
       сохранения данных в базу и вытаскивание данных из
       базы. На прямую с этим типом не работуют. Для
       преобразования из/в SqlValue написано много
       инстансов Convertible. От него зависит какие типы
       данных можно сохранять в базе данных и получать из
       нее.
****** Недостатки
       - Не содержит тип Decimal, вместо него содежит Rational,
         который плохо подходит для хранения чисел с
         произвольной точностью, ибо ни одна база данных не
         имеет встроенной поддержки Rational. Decimal
         является полным отражением типа DECIMAL/NUMERIC,
         который имеется в различных РСУБД
       - Большая путаница с датами, тип содежит конструкторы
         для разных типов, представляющих одно и то-же. Так
         как задача SqlValue состоит в том, чтобы хранить
         значение, которое может быть сохранено в базе, то не
         логично иметь несколько конструкторов для хранения
         одних и тех же данных
       - Инстансы Convertible содержат не логичные конверсии
         между числами и датами, опирающиеся на внутреннюю
         структуру типов Haskell. Такие конверсии должны
         фейлится по умолчанию, так как пользователь должен
         явно использовать тот или иной способ преобразования
         дат в числа и на оборот. Это нужно воизбежание
         сложных ошибок, которые можно обнаружить только во
         время испольнения
****** Используется в
       - IConnection в методе run
       - Statement в действиях execute
*** HDBC.DriverUtils
**** Функции
***** closeAllChildren, addChild, childFinalizer
****** Финализация и фильтрация списка слабых ссылок
****** Заметки
       - Фунция childFinalizer не блокирует MVar во время
         чистки списка от пустых ссылок. Вполне вероятна
         модификация MVar в цроцессе очистки списка ссылок.
**** Типы данных
***** ChildList
****** Используется для
       Хранение списка слабых ссылок на Statement.
*** HDBC.Locale
**** Функции
***** iso8601DateFormat
****** Создает строку с форматом даты
*** HDBC.Statement
**** Типы
***** Statement
      Интерфейс для работы с подготовленным выражением базы
      данных. Его возвращает соединение при выполнении
      prepare
****** Используется в
       - IConnection метод prepare возвращает 
***** SqlError
****** Ошибка исполнения запроса
****** Нет инстанса Exception, вернее инстанс пустой
*** HDBC.Types
**** Тайпклассы
***** IConnection
      Интерфейс к подключению к базе данных. Драйверы
      различных БД должны инстанцировать его для своих типов
**** Типы
***** ConnWrapper
      Работает как обертка для IConnection инстансов.
*** HDBC.Utils
**** Функции
***** Обработка ошибок
      - catchSql
      - handleSql
      - sqlExceptions
      - handleSqlError
        Преобразует SqlError в строку и поднимает
***** Обработка запросов
      - withTransaction
      - fetchAllRows
        лениво зачитывает список результатов с помощью
        unsafeInterleaveIO. Не безопасна
      - evalAll 
        форсирует вычисление списка результатов.
**** Недостатки
     - Много странных функций, дублирующих код, очень похожих
       на устаревший код, оставленный во имя
       совместимости. Например 
